#!/usr/bin/env bash

# Collects statistics on the RPi host and sends them to the central tracker
# webapp.  To use, copy this script to the RPi host, then execute.  In production:
# run periodically from CRON - once a minute is OK.
#
# NOTE ON GPS DATA:
# - if GPS(BU-353S4) is present and configured, report live GPS data
# - otherwise, pull lat/lon from 
#     - /usr/local/share/tracker/default_latlon
#     - ~/.default_latlon
# - otherwise, report alcatraz as the lat/lon

TRACKER_HOST=45.79.82.37
TRACKER_PORT=9191

tracker_is_listening() {
  timeout 1 nc -z $TRACKER_HOST $TRACKER_PORT
}

tracker_is_not_listening() {
  ! tracker_is_listening
}

has_gps () {
  lsusb | grep PL2303 > /dev/null
}

has_no_gps () {
  ! ( has_gps )
}

default_lat () {
  lat="37.8267"
  tgt1=/usr/local/share/tracker/default_latlon
  tgt2=~/.default_latlon
  [ -f $tgt1 ] && lat=`cat $tgt1 | sed -n '1p'`
  [ -f $tgt2 ] && lat=`cat $tgt2 | sed -n '1p'`
  echo $lat
}

default_lon () {
  lon="-122.4233"
  tgt1=/usr/share/tracker/default_latlon
  tgt2=~/.default_latlon
  [ -f $tgt1 ] && lon=`cat $tgt1 | sed -n '2p'`
  [ -f $tgt2 ] && lon=`cat $tgt2 | sed -n '2p'`
  echo $lon
}

uptime=$( uptime | tr -d ',' | awk '{print $3}' )
freemem=$( free | grep Mem | awk '{print $2, $3, $4}' | tr ' ', '-' )

if has_gps; then
  rawdata=$( gpspipe -w -n 10 | grep -m 1 lat )
  gpsdata=$( echo $rawdata | jq -c --arg uptime $uptime --arg freemem "$freemem" '{time,lat,lon,alt,speed} + {uptime:$uptime,freemem:$freemem,hasGPS:true}' )
else
  rawdata="{'freemem':'$freemem','uptime':'$uptime','lat':`default_lat`,'lon':`default_lon`,'speed':0,'alt':0,'hasGps':false}"
  gpsdata=`echo $rawdata | sed -e "s/'/\"/g"`
fi

if tracker_is_not_listening; then
  err="ERROR: TRACKER APP IS NOT LISTENING"
  echo $err
  echo "http://$TRACKER_HOST:$TRACKER_PORT"
  /usr/bin/logger -t gps-logger "'$err'"
  exit 1
fi

curl --data-urlencode "data=$gpsdata" http://$TRACKER_HOST:9191/heartbeat/`hostname`
/usr/bin/logger -t gps-logger 'Log complete'
echo " "
