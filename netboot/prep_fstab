#!/usr/bin/env ruby

SD_BASE       = "/media"
SD_PARTITIONS = Dir.glob("#{SD_BASE}/*")
SD_ROOT       = SD_PARTITIONS.select {|path| path.split('/').last != 'boot' }.first
TAB_FILE      = "#{SD_ROOT}/etc/fstab"
BACKUP_FILE   = "#{TAB_FILE}.backup.#{Time.now.strftime('%y%m%d_%H%M%S')}"

TAB_TEXT = <<-EOF
proc            /proc           proc    defaults          0       0
/dev/mmcblk0p1  /boot           vfat    defaults          0       2
/dev/nfs        /               rootfs  defaults,rw  
tmpfs  /tmp     tmpfs  nodev,nosuid,size=10%,mode=1777  0  0
tmpfs  /var/log tmpfs  nodev,nosuid,size=20%,mode=1755  0  0
EOF

abort "ERROR - sd base directory #{SD_BASE} not found" unless Dir.exist?(SD_BASE)
abort "ERROR - sd partitions at #{SD_BASE} not found"  unless SD_PARTITIONS.length == 2
abort "ERROR - no SD root partition"                   if SD_ROOT.nil?

system "sudo cp #{TAB_FILE} #{BACKUP_FILE}"
File.open("/tmp/tab", 'w') {|f| f.puts TAB_TEXT}
system "sudo cp /tmp/tab #{TAB_FILE}"
system "sudo touch #{SD_ROOT}/tmp/.tmpfs"

puts "Text written to #{TAB_FILE}\n#{TAB_TEXT}"
